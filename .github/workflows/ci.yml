name: CI

on:
  push:
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('backend/requirements*.txt') }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx

      - name: Create .env (CI)
        run: |
          echo "DATABASE_URL=sqlite:///ci.db" > .env

      - name: Run Alembic migrations
        run: alembic upgrade head

      - name: Backend unit/smoke tests
        run: |
          python - << 'PY'
          import os
          os.environ["DATABASE_URL"]="sqlite:///ci.db"
          from fastapi.testclient import TestClient
          from app.main import app
          c = TestClient(app)
          r = c.get("/health"); r.raise_for_status()
          # Optional: analytics endpoints should 200 even if empty
          c.get("/api/analytics/kpi-summary?target=10000").raise_for_status()
          c.get("/api/analytics/top-items?limit=5").raise_for_status()
          PY

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Type check
        run: npx tsc -b --pretty false

      - name: Build
        run: npm run build
